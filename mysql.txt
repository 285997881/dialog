http://dev.mysql.com/doc/refman/5.6/en/copying-databases.html

mysql 
https://www.mysql.com/
http://cdn.mysql.com/Downloads/MySQL-5.6/mysql-5.6.25.tar.gz
http://cdn.mysql.com/Downloads/MySQL-5.6/MySQL-5.6.25-1.el6.x86_64.rpm-bundle.tar



DDL
DML
DCL

MYSQL结构
连接管理器->解析器-->优化器-->存储引擎

连接管理器(接受用户请求)->线程管理器->用户模块(验证用户身份)->命令分发模块->解析器-->缓存-->优化器-->访问控制模块->表管理器->存储引擎

存储引擎
	MyISAM(不支持事务)(5.5.8之前默认)
	InnoDB
	
	
 General Availablility (GA) release
	
	
添加mysql yum源
http://repo.mysql.com/mysql-community-release-el6-5.noarch.rpm
yum localinstall mysql-community-release-el6-5.noarch.rpm

安装mysql
yum install mysql-community-server
	包括mysql-community-server  mysql-community-client  mysql-community-common  mysql-community-libs

/usr/bin/mysql_install_db --user=mysql
	--basedir=/dir
	--datadir=/dir
	
安装后的文件
/usr/bin			client programs and scripts
/usr/sbin			the mysqld server 
/var/lib/mysql 		log files,databases 




源码安装mysql
用cmake

-dcmake_install_prefix=/usr/local/mysql
-dmysql_datadir=/data
-dsysconfidir=/etc
	
cmake 选项
		-cmake install prefix  安装路径
		-compilation comment Comment about compilation environment
	
mysql配置文件my.cnf

位置				作用
/etc/my.cnf			global options
/etc/mysql/my.cnf	global options(as of mysql 5.1.15)
sysconfdir/my.cnf	global options
$mysql_home/my.cnf	server-specific options
default-sxtra-file	the file specified with --difaults-extra-file=path
~/my.cnf 			user-specifix options
默认的依次从上到下检查配置文件是否存在，使用第一个发现的文件作为启动文件。

查看mysql服务加载的文件
ps ax| grep '[m]ysqld'

cat /proc/$(pidof mysqld)/cmdline |tr '\0' '\n'

查看my.cnf的使用顺序
/usr/sbin/mysqld --help --verbose --skip-networking --pid-file=$(tempfile) 2> /dev/null | grep -A1 'Default options are read'
	
	
mysql.sock文件作用	
	
Mysql有两种连接方式： 
（1）TCP/IP 
（2）socket 	
>>>>>>> origin/master
	
mysql.sock不在/tmp/下就在/var/lib/mysql下
可以用ip方法连接mysql
mysql -h127.0.0.1 -uuser -p
或给mysql.sock创建个链接
ln -s /tmp/mysql.sock /var/lib/mysql/mysql.sock	
	
sql模式(sql_mode)
常用模式
ansi
strict_trans_tables
traditional

selece @@sql_mode 

set [session|global]sql_mode='mode'	
	
	
配置选项	
	
存储引擎	
default_storage_engine=	
字符集
character_set_server= 	
character_set_database= 	
character_set_system= 
时区
system_time_zone	
	
	
	

myisam，将数据存储成三个文件
.frm	表结构文件
.myd	数据文件(mydata)
.myi	索引文件(myindex)

innodb 
所有的表共享一个表空间
建议每个表独立一个表空间文件
	.frm	表结构
	.ibd	表空间
	
	
my.cnf 从 /usr/share/mysql/my-*.cnf复制为/etc/my.cnf

\c	clear
\h	help
\q	exit|quit
\s	status
\T	tee
\t	notee
\u db	use database		切换数据库
\. fn	source filename		读取并执行给定的sql命令

default-character-set=     字符集

mysql
mysqladmin
	mysqladmin -u root -p password "new password"
	SET PASSWORD FOR 'root'@'localhost' = PASSWORD('newpwd');
	UPDATE mysql.user SET Password = PASSWORD('newpwd')


mysqldump
	mysqldump -u root -p dbname1 dbname2 >backup.sql
	mysqldump -u root -p --all-databases > back.sql



备份
热备份		温备份		冷备份
	
物理备份	逻辑备份

完全备份	增量备份	差异备份

mysqldump
	dbname
	--databases
	--all-databases 
	--master-data={0|1|2}	可记录备份的时间点
	--lock-all-tables
	--flush-logs
	
mysqlhotcopy

ibbackup
xtrabackup


select * into outfile /path/file.txt from tname 
load data infile '/path/file.txt' into tables tname

	
Delimited-Text Format Backup	
mysqldump --tab=/tmp dbname 备份数据库，将表格式备份成.sql文件，表内容备份为.txt文件	
还原方法
mysql dbname < table.sql 
myslqimport dbname table.txt 
或者
mysql>load data infile 'table.txt' into table tname;

备份方法
mysqldump
复制整个数据库目录(mysqlhotcopy,只适用于myisam)
日志文件与增量备份结合
利用镜像
	
如要热备份，为保证数据的完整性，需给备份加一个读操作锁(read lock)
mysqldump -uroot -p --lock-all-tables dbname > backup.sql	
	
还原数据库	
cat backup.sql | mysql db_name
	
create database db_name;
use db_name
source /dir/backup.sql	
\. /dir/backup.sql

mysqldump -uroot --password=xx dbname | mysql -uroot --password=xxx -h hostname dbname 

mysqldump ---user admin --password=password mydatabase |  gzip > /usr/local/mydatabase.gz

mysqldump --no-data --databases mydatabase1 mydatabase2 mydatabase3  > sql.dump

mysqldump --host=host1 --opt mydatabase | mysql --host=host2 -C newdatabase

mysqldump --opt mydatabase > sql.dump



mysqlshow database


flush privileges
refresh=flush host +flush logs 
flush status
flush tables
flush threads
flush hosts
flush logs	
	
	
mysqladm shutdown	
	
导出导入文本文件
load data infile
mysqlimport
select ... into file 

load data infile 'file1'
 into table tname
 [fields|columns] 
	terminated by ''
	enclosed by ''
	escaped by ''
	


日志
show variables like '%log%'

错误日志	log-error=/var/log/mysqld.log

general query log(常规查询日志)
general_log[={0|1}] 0为off
general_log_file=/var/lib/mysql/generallog.log
set global general_log=1


二进制日志(binary log)
log-bin=/var/log/mysql/binnane
[mysqladmin] flush logs 刷新日志

使用二进制日志恢复数据库
mysqlbinlog binarylig.000001|mysql -uroot -p

show binary logs
show master logs


慢查询日志(slow query log)
slow_query_log[={0|1}]
slow_query_log_file=
long_query_time=
min_examined_row_limit=


中继日志(relay log)
事务日志




	
	
	
http://dev.mysql.com/doc/refman/5.6/en/tutorial.html	
	

show variables like '%%'	

show {databases|schemas} {like 'pattern'|where expr};
show [full] tables [from|in dbname];
show [full] columns from tablename
show index from tablename

show processlist
其他show
show engines;  #查看先有的存储引擎
show privileges; #查询命令的功能(特权)
show table status [from|in db_name] [like 'pattern'|where expr]
show [global|session] status #查询服务器的状态信息
show character set [like 'utf8'];
show [full] columns from database;
show create{database|schema|table|procedure|function|trigger|view|events} db_name;

show engine engine_name {status|mutex}
	show engine innodb status;
	SHOW ENGINE PERFORMANCE_SCHEMA STATUS\G
	
show grants [for user]
	show grants for current_user
	show grants for current_user()
	
show {index|indexes|keys|triggers} {from|in} tbl_name|db_name
show [gloabl|session] variables [like 'pattern'|where expr]
show warnings
show master status #provides status information about the binary log files of the master

show open tables [{from|in} db_name] [like 'pattern'|where expr] @当前在缓存中打开的非临时表
show plugins @查询插件信息
show procedure code proc_name #查询过程的详细信息
show procedure status [like 'pattern'|where expr]
show [full] processlist #查询当前用户所允许的线程(threads)
show slave hosts
show slave status;



触发器
create trigger name before|after insert|update|delete on tablename for each row code
drop trigger [databasename.]triggername

mysqladmin 能完成的工作
	创建，删除database
	修改用户密码
		mysqladmin -u root -h localhost password **
	重新加载名为mysql的权限数据库
	刷新数据库数据和日志文件(清除各种缓存区或临时缓冲区)
	查看mysql服务器的工作状态和变量设置情况
	列出和保存mysql进程
	测试与mysql服务器的连接是否成功
	关闭mysql服务器


/etc/init.d/mysqld start
port:3306


mysqldump 
	mysqldump [options] dbname [tables] > backup.sql
	mysqldump [options] --alldatabasess

恢复数据库
	mysql -u root -p datanasename < backup.sql
	mysql -u root -p < backup.sql (恢复多个数据库)
	
cat backup.sql | mysql db_name
	
create database db_name;
use db_name
source /dir/backup.sql	

镜像机制

grant replicetion slave on *.* to replicuser@slavehostname identified by '***'
	

	
数据类型
	数值型
		int 
		float
		double
		decimal
		real
	字符型
		char
		varchar
		text
		blob
	日期
		date
		time
		datetime
		timestamp
		year
		
auto_increment		


权限
全局权限 super
库级别	
表级别	delete alter trigger
列级别	select insert 

show grants;




MYSQL权限一览
权限					权限级别						权限说明

CREATE					数据库、表或索引				创建数据库、表或索引权限
DROP					数据库或表						删除数据库或表权限
GRANT OPTION			数据库、表或保存的程序			赋予权限选项
REFERENCES				数据库或表				 
ALTER					表								更改表，比如添加字段、索引等
DELETE					表								删除数据权限
INDEX					表								索引权限
INSERT					表								插入权限
SELECT					表								查询权限
UPDATE					表								更新权限
CREATE VIEW				视图							创建视图权限
SHOW VIEW				视图							查看视图权限
ALTER ROUTINE			存储过程						更改存储过程权限
CREATE ROUTINE			存储过程						创建存储过程权限
EXECUTE					存储过程						执行存储过程权限
FILE					服务器主机上的文件访问			文件访问权限
CREATE TEMPORARY TABLES	服务器管理						创建临时表权限
LOCK TABLES				服务器管理						锁表权限
CREATE USER				服务器管理						创建用户权限
PROCESS					服务器管理						查看进程权限
RELOAD					服务器管理						执行flush-hosts, flush-logs, flush-privileges, flush-status, flush-tables, flush-threads, refresh, reload等命令的权限
REPLICATION CLIENT		服务器管理						复制权限
REPLICATION SLAVE		服务器管理						复制权限
SHOW DATABASES			服务器管理						查看数据库权限
SHUTDOWN				服务器管理						关闭数据库权限
SUPER					服务器管理						执行kill线程权限



grant all privileges on dbname.* to username@'%'

启动mysqld——safe时，通过更新授权表的方式直接更改其秘密，而后移除此两项重启服务器
--skip-grant-tables
--skip-networking